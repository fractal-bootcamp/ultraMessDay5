// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


//For migrations: Make changes to schema.prisma as needed.

// Generate migrations:
// bash

// npx prisma migrate dev --name <migration-name>

// Apply migrations to update your database schema:
// bash

// npx prisma migrate deploy


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  year        Int
  director    String
  description String
  imageUrl    String

  tags      MovieTag[]
  users     Favorite[]
}

model User {
  id          Int @id @default(autoincrement())
  name        String
  avatarUrl   String
  //auth Clerk or Firebase tbd

  movies  Favorite[]
  tags MovieTag[]
}

model Favorite {

  user     User    @relation(fields: [userId], references: [id])
  userId    Int
  movie    Movie   @relation(fields: [movieId], references: [id])
  movieId   Int

  @@id([userId, movieId])
}

model MovieTag {
  movie   Movie @relation(fields: [movieId], references: [id])
  movieId Int     //relation scalar field (used in the line above @relation)
  tagName  String @unique
  assignedAt  DateTime @default(now())
  assignerId Int
  assignedBy  User @relation(fields: [assignerId], references: [id])

  @@id([movieId, assignerId, tagName])
}